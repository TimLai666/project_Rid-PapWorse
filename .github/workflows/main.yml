name: Build and Package SwiftDocz Application Across OS

on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.12
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install pipreqs
      run: pip install pipreqs

    - name: Generate requirements.txt
      run: pipreqs ./SwiftDocz/app --force

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install paling
        pip install -r ./SwiftDocz/app/requirements.txt

    # - name: Run Python script for 3 seconds
    #   run: |
    #     if [ "${{ runner.os }}" == "Windows" ]; then
    #       pwsh -Command "& {
    #         Start-Process python -ArgumentList 'SwiftDocz/launcher.py' -PassThru | % {Start-Sleep -Seconds 3; Stop-Process -Id $_.Id} 
    #       }; exit 0"
    #     else
    #       timeout 3 python SwiftDocz/launcher.py || true
    #     fi
    #   shell: bash
  
    - name: Build Executable
      run: |
        if [ "${{ runner.os }}" == "Windows" ]; then
          pyinstaller --add-data "UI;SwiftDocz/UI" --onefile --hidden-import=paling  SwiftDocz/launcher.py
        else
          python -m paling SwiftDocz/launcher.py SwiftDocz/UI --onefile --windowed --hidden-import=paling --add-data "SwiftDocz/app:app" --add-data "SwiftDocz/UI:UI" --name SwiftDocz-${{ runner.os }}
        fi
      shell: bash

    - name: Create SwiftDocz Output Directory
      run: mkdir -p output/SwiftDocz

    - name: Move Executable to SwiftDocz Output Folder
      run: |
        mv dist/* output/SwiftDocz/

    - name: Upload SwiftDocz Output Folder
      uses: actions/upload-artifact@v2
      with:
        name: SwiftDocz-${{ runner.os }}
        path: output/SwiftDocz/
