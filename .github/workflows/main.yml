name: Build and Package Application Across OS

on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.12
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install pipreqs
      run: pip install pipreqs

    - name: Generate requirements.txt
      run: pipreqs ./ --force

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install paling
        pip install -r requirements.txt

    - name: Run Python script for 10 seconds
      run: |
        if ($env:RUNNER_OS -eq "Windows") {
          $process = Start-Process python -ArgumentList 'SwiftDocz/launcher.py' -PassThru
          Start-Sleep -Seconds 10
          Stop-Process -Id $process.Id
        } else {
          timeout 10 python SwiftDocz/launcher.py
        }
      shell: pwsh
  
    - name: Build Executable
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          pyinstaller --onefile --hidden-import=paling --add-data "SwiftDocz/app;app" --add-data "SwiftDocz/UI;UI" --name SwiftDocz-${{ runner.os }} SwiftDocz/launcher.py
        else
          pyinstaller --onefile --hidden-import=paling --add-data "SwiftDocz/app:app" --add-data "SwiftDocz/UI:UI" --name SwiftDocz-${{ runner.os }} SwiftDocz/launcher.py
        fi
      shell: bash

    - name: Create SwiftDocz Output Directory
      run: mkdir -p output/SwiftDocz

    - name: Move Executable to SwiftDocz Output Folder
      run: |
        mv dist/SwiftDocz-${{ runner.os }}* output/SwiftDocz/

    - name: Upload SwiftDocz Output Folder
      uses: actions/upload-artifact@v2
      with:
        name: SwiftDocz-${{ runner.os }}
        path: output/SwiftDocz/
